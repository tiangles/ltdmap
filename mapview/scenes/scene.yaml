global:
    default_order: function() { return feature.sort_key || 0; }

scene:
    background:
        color: '#E7E7DE'
cameras:
    iso-camera:
        # Manhattan
        position: [-74.00976419448854, 40.70532700869127, 16]
        type: isometric
        axis: [0, 1]
        active: false
    perspective-camera:
        # Manhattan
        position: [-74.00976419448854, 40.70532700869127, 16]
        type: perspective
        fov: 45
        active: true

lights:
    light1:
        type: directional
        origin: world
        direction: [1, 1, -1]
        diffuse: [0, 0, 0, 1.]
        ambient: [1, 1, 1, 1.]

# textures:
    # pois:
        # url: img/poi_icons_32.png
        # sprites:
            # plane: [0, 0, 32, 32]
            # tree: [0, 185, 32, 32]
            # sunburst: [0, 629, 32, 32]
            # restaurant: [0, 777, 32, 32]
            # cafe: [0, 814, 32, 32]
            # museum: [0, 518, 32, 32]
            # bar: [0, 887, 32, 32]
            # train: [0, 74, 32, 32]
            # bus: [0, 148, 32, 32]
            # hospital: [0, 444, 32, 32]
            # parking: [0, 1073, 32, 32]
            # info: [0, 1110, 32, 32]
            # hotel: [0, 259, 32, 32]
            # bookstore: [0, 333, 32, 32]
textures:
    pois:
        url: images/pois.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            plane: [0, 0, 32, 32]
            tree: [0, 185, 32, 32]
            sunburst: [0, 629, 32, 32]
            restaurant: [0, 777, 32, 32]
            cafe: [0, 814, 32, 32]
            museum: [0, 518, 32, 32]
            bar: [0, 887, 32, 32]
            train: [0, 74, 32, 32]
            bus: [0, 148, 32, 32]
            hospital: [0, 444, 32, 32]
            parking: [0, 1073, 32, 32]
            info: [0, 1110, 32, 32]
            hotel: [0, 259, 32, 32]
            bookstore: [0, 333, 32, 32]
            shield: [0, 1142, 32, 32]
            
styles:
    flatcolor:
        base: polygons
        lighting: false
    heightglow:
        base: polygons
        lighting: vertex
        shaders:
            blocks:
                color: "float lightAngle = 0.5 + 0.5 * dot(worldNormal(),normalize(vec3(1,1,1))); color.rgb += mix(vec3(0.9,0.9,0.9),vec3(0,0,0),lightAngle);"
                #color: "color.rgb += vec3(worldPosition().z / 800.);"
    heightglowline:
        base: lines
        mix: heightglow
    icons:
        base: points
        texture: pois
    dzy:
        base: points
        texture: pois
    dashes:
        base: lines
        dash: [1, 1]
        dash_background_color: lightgrey

sources:
    # osm:
        # type: MVT
        # url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.mvt
        # max_zoom: 16
        # url_params:
            # api_key: vector-tiles-tyHL4AY
    local:
        type: GeoJSON
        url:  http://192.168.84.32:8081/tile?z={z}&x={x}&y={y}
        max_zoom: 18
layers:
    earth:
        data: { source: osm }
        draw:
            polygons:
                order: 0
                color: '#f0ebeb'
    custom1:
        data: { source: local }
        draw:
            polygons:
                order: 60
                color: '#ff0000'
                width: 4px
            lines:
              color: '#00ff00'
              order: 100
              width: 2px
    road:
        data: { source: local }
        draw:
            polygons: 
                order: 99
                color: '#ff0000'
                width: 3px
            lines:
                color: '#ffff00'
                order: 71
                width: 0px
        motorway: 
            filter: { road_class: motorway, $zoom: { min: 6 } }
            draw:
                lines:
                    color: '#F7CF6B'
                    order: 79
                    width: [[5, 1px],[7, 2px],[10, 5px],[14, 9px], [15, 11px], [17, 25]]
                    outline:
                        color: '#E7AA18'
                        width: [[9, 1px],[14, 2px]]
        major_road:
            filter: { road_class: major_road, $zoom: { min: 8} }
            draw:
                lines:
                    color: '#F7F9D2'
                    order: 77
                    width: [[7, 1px],[9, 3px],[11, 5px],[14, 7px], [17, 20]]
                    outline:
                        color: '#F7CB94'
                        width: [[10, 1px],[14, 2px]]
            major_road_highzoom:
                filter: {$zoom: { min: 9} }
                draw:
                    lines:
                        color: '#F7CF6B'
                        outline:
                            color: '#E7AA18'
        other_major_road:
            filter: { road_class: [other_major_road], $zoom: { min: 10 } }
            draw:
                lines:
                    color: '#F7F9D2'
                    order: 75
                    width: [[9, 1px], [10, 3px], [14, 5px], [16, 12]]
                    outline:
                        color: '#F7CB94'
                        width: [[11, 1px],[14, 2px]]
        secondary_road:
            filter: { road_class: [secondary_raod], $zoom: { min: 11 } }
            draw:
                lines:
                    color: '#fffeb3'
                    order: 75
                    width: [[9, 1px], [10, 3px], [14, 5px], [16, 12]]
                    outline:
                        color: '#d7d3d0'
                        width: [[11, 1px],[14, 2px]]
        local_connecting_road:
            filter: { road_class: [local_connecting_road], $zoom: { min: 12 } }
            draw:
                lines:
                    color: '#ffffff'
                    order: 73
                    width: [[11, 6],[12, 2px],[14, 2px], [16, 7]]
            local_connecting_road_highzoom:
                filter: {$zoom: { min: 13 } }
                draw:
                    lines:
                        outline:
                            color: '#B5B2AD'
                            width: [[14, 1px], [16, 1px]]
        loacl_road:
            filter: { road_class: [local_road_high_importance, loacl_road], $zoom: { min: 14 } }
            draw:
                lines:
                    color: '#ffffff'
                    order: 73
                    width: [[14, 2px], [16, 7]]
                    outline:
                        color: '#B5B2AD'
                        width: [[14, 1px], [16, 1px]]
        local_road_minor_importance:
            filter: { road_class: [local_road_minor_importance, other_road], $zoom: { min: 15 } }
            draw:
                lines:
                    color: '#ffffff'
                    order: 73
                    width: [[14, 1px], [16, 7]]
                    outline:
                        color: '#B5B2AD'
                        width: [[14, 1px], [16, 1px]]
    road_label:
        data: { source: local, layer: road}
        filter:
            any: [name: true, shield: true]
        draw:
            text:
                interactive: true
                visible: true
                priority: 5
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: sans-serif
                    weight: 400
                    style: normal
                    size: 1.em
                    fill: black
                    stroke: { color: black, width:1 }
        shields:
            filter: 
                all:
                    - {shield: true}
                    - {$zoom: { min: 9 }}
            draw:
                dzy:
                    sprite: function() {
                                var r = Math.round(Math.random()*100);
                                if(r == 5)
                                    return 'shield';
                            }
                    priority: 115
                    collide: true
                    #repeat_distance: 3000px
                    size: 20px
                    color: white
                    cull_from_tile: true
                    text:
                        collide: true
                        repeat_distance: 0px
                        anchor: center
                        text_source: |
                            function() {
                                // Extract shield text
                                var m = feature.shield.match(/\d+/);
                                return m && m[0];
                                //if(feature.shield == "")
                                    //return "dzy";
                                //return feature.shield;
                            }
                        font:
                            family: yahei
                            size: 10px
                            fill: white
    water:
        data: { source: local }
        draw:
            polygons:
                order: 15
                color: '#A5CFE7'
                width: 1
    water_label:
        data: { source: local, layer: water}
        filter: { name: true , $zoom: { min: 12 }}
        draw:
            text:
                text_source: | 
                    function() {return feature.name}
                interactive: true
                visible: true
                priority: 2
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: Microsoft YaHei
                    weight: 400
                    style: normal
                    size: 1.em
                    fill: black
                    stroke: { color: black, width:1 }   
    boundary:
        data: { source: local }
        draw:
            polygons:
                order: 11
                color: '#ffffff'
                width: 4px
            lines:
                order: 90
                color: '#555555'
                width: 1.5px
    boundary_label:
        data: { source: local, layer: boundary}
        filter: { name: true}
        draw:
            text:
                anchor: center
                repeat_distance: 1000
                interactive: true
                visible: true
                priority: 2
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: Microsoft YaHei
                    weight: 400
                    style: normal
                    size: 1.em
                    fill: darkgreen
                    stroke: { color: darkgreen, width:1 }    
    land_use:
        data: { source: local }
        draw:
            polygons:
                order: 1
                color: '#ffffff'
                width: 0
        build_up:
            filter: { feature_type: buildings, $zoom: { max: 7 }}
            draw:
                polygons:
                    order: 3
                    color: '#660000'
        industrial:
            filter: { feature_type: Industrial area, $zoom: { min: 14 }}
            draw:
                polygons:
                    order: 6
                    color: '#E3F0E7' 
        airport:
            filter: { feature_type: Airport Ground, $zoom: { min: 14 }}
            draw:
                polygons:
                    order: 6
                    color: '#E3F0E7' 
        stadium:
            filter: { feature_type: Stadium Ground, $zoom: { min: 14 }}
            draw:
                polygons:
                    order: 6
                    color: '#E3F0E7'        
        hospital: 
            filter: { feature_type: Hospital Ground, $zoom: { min: 14 }}
            draw:
                polygons:
                    order: 6
                    color: '#FFEBE7'
        school:
            filter: { feature_type: [University or College Ground], $zoom: { min: 14 }}
            draw:
                polygons:
                    order: 5
                    color: '#DEF3FF' 
        green_area:
            filter: { feature_type: [Park/Garden, Golf Course Ground, Amusement Park Ground, Stadium Ground ], $zoom: { min: 8 }}
            draw:
                polygons:
                    order: 8
                    color: '#CEDFAD'
        landuse:
            filter: { feature_type: [Other Land Use], $zoom: { min: 12 } }
            draw:
                polygons:
                    order: 5
                    color: '#FFEBCE'               
    build_flat:
        data: { source: local, layer: build }
        filter: { $zoom: { min: 16 , max: 17 } }
        draw:
            polygons:
                order: 85
                color: [1, 1, 1]
            lines:
                order: 85
                width: 1.0px
                color: [0.65,0.65,0.65]
    build_3d:
        data: { source: local, layer: build }
        filter: { $zoom: { min: 17 } }
        draw:
            polygons:
                style: heightglow
                order: global.default_order
                color: [0.65,0.65,0.65]  
        extruded:
            draw:
                polygons:
                    extrude: true
                lines:
                    style: heightglowline
                    width: 0.5
                    color: [0.55, 0.55, 0.55]
                    order: function() { return feature.sort_key + 1 || 0; }
                    extrude: true
    poi:
        data: { source: local}
        filter: { name: true, $zoom: { min: 1 } }
        draw:
            icons:
                interactive: true
                size: 20px
                priority: 50
                collide: true
                transition:
                    [show, hide]:
                        time: 1s
                text:
                    interactive: true
                    text_wrap: 20
                    font:
                        family: sans-serif
                        weight: 400
                        style: normal
                        size: 1.0em
                        fill: darkgreen
        # add generic icon at high zoom
        # generic:
            # filter: { $zoom: { min: 18 } }
            # draw:
                # icons:
                    # sprite: function() { return feature.kind; }
                    # sprite_default: info
                    #sprite: info

        # examples of different icons mapped to feature properties
        icons:
            restaurant:
                filter: { feature_type: [restaurant] }
                draw: { icons: { sprite: restaurant } }
            cafe:
                filter: { kind: [cafe, convenience] }
                draw: { icons: { sprite: cafe } }
            bar:
                filter: { feature_type: [bar, pub] }
                draw: { icons: { sprite: bar } }
            culture:
                filter: { feature_type: [museum, library, church, place_of_worship, bank] }
                draw: { icons: { sprite: museum } }
            station:
                filter: { feature_type: [station] }
                draw: { icons: { sprite: train } }
            hospital:
                filter: { feature_type: [hospital, pharmacy] }
                draw: { icons: { sprite: hospital } }
            hotel:
                filter: { feature_type: [hotel, hostel] }
                draw: { icons: { sprite: hotel } }
            bus_stop:
                filter: { feature_type: [bus_station] }
                draw: { icons: { sprite: bus } }
            bookstore:
                filter: { feature_type: [library] }
                draw: { icons: { sprite: bookstore } }
            builtup:
                filter: { feature_type: [builtup] }
                draw: { icons: { sprite: info } }

    landuse:
        data: { source: osm }
        filter:
            name: true
            any:
                - { $zoom: { min: 9 }, area: { min: 10000000 } }
                - { $zoom: { min: 10 }, area: { min: 3300000 } }
                - { $zoom: { min: 12 }, area: { min: 1000000 } }
                - { $zoom: { min: 13 }, area: { min: 10000 } }
                - { $zoom: { min: 15 } }
        draw:
            polygons:
                order: 1
                color: '#fffffa'
                interactive: true # currently ignored
        green:
            filter: { kind: [park, graveyard, cemetery, forest, recreation_ground] }
            draw:
                polygons:
                    order: 2
                    color: '#89ab84'
        blue:
            filter: { kind: [commercial, industrial] }
            draw:
                polygons:
                    color: '#C0CDCD'
        orange:
            filter: { kind: [university] }
            draw:
                polygons:
                    color: '#D9CFC3'

    water:
        data: { source: osm }
        filter:
            any:
                # show smaller water areas at higher zooms
                - { $zoom: { min: 0 }, area: { min: 10000000 } }
                - { $zoom: { min: 10 }, area: { min: 1000000 } }
                - { $zoom: { min: 12 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 1000 } }
                - { $zoom: { min: 18 } }
        draw:
            flatcolor:
                order: 3
                color: '#8db7d5'

    roads:
        data: { source: osm }
        filter:
            not: { kind: [rail] }
        draw:
            lines:
                color: white
                width: 12.
                order: 'function() { return feature.sort_key + 5 || 0 }'
                #outline:
                #    color: [[16, '#999'], [18, '#aaa']]
                #    width: [[10, 0], [16, 2]]

        rounded:
            filter: { $zoom: { min: 18 } }
            draw:
                lines:
                    cap: round
        # rail:
        #     filter: { kind: rail }
        #     draw:
        #        lines:
        #           cap: butt
        #           color: '#333'
        #           width: 1.
        #           order: 8
        #           outline:
        #             color: '#555'
        #             width: 1.5
        routes:
            filter: { $zoom: { max: 10 } }
            draw:
                lines:
                    color: '#aaa'
                    width: 2.
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    color: '#D16768'
                    width: [[14, 2px], [15, 12]]
                    outline:
                        width: [[14, 0], [15, 2]]
            link:
                filter: { is_link: yes }
                draw:
                    lines:
                        color: '#aaa'
                        width: [[13, 1px], [14, 12]]
        major_road:
            filter: { kind: major_road, $zoom: { min: 10 } }
            draw:
                lines:
                    color: '#aaaaa4'
                    width: [[10, 1px], [13, 2px], [14, 2px], [16, 12]]
                    outline:
                        width: [[16, 0], [17, 1]]
        minor_road:
            filter: { kind: minor_road }
            draw:
                lines:
                    color: '#bbbbb8'
                    width: [[13, 1px], [14, 1px], [15, 8]]
                    outline:
                        width: [[17, 0], [18, 1]]
        paths:
            filter: { kind: path }
            draw:
                lines:
                    color: '#fff'
                    width: [[15, 1px], [17, 2px]]
                    outline:
                        width: 0
        ferries:
            filter: { kind: ferry }
            draw:
                lines:
                    style: dashes
        airports:
            filter: { aeroway: true }
            draw:
                lines:
                    color: '#f00'
            taxiways:
                filter: { aeroway: taxiway }
                draw:
                    lines:
                        width: [[13, 1px], [14, 2.0], [17, 5.0]]
            runways:
                filter: { aeroway: runway }
                draw:
                    lines:
                        color: [[13, '#FFE4B5'], [16, white]]
                        width: [[11, 2.], [12, 3.], [13, 4.], [17, 8.]]
                        order: 39
                        cap: square
                        outline:
                            color: orange
                            width: [[11, 0], [12, 1.], [17, 2.]]

    poi_icons:
        data: { source: osm, layer: pois }
        filter: { name: true, not: { kind: [peak, viewpoint, bicycle_rental, car_sharing] }, $zoom: { min: 15 } }
        draw:
            icons:
                interactive: true
                #offset: [0px, -15px]
                size: 20px
                priority: 5
                collide: true
                transition:
                    [show, hide]:
                        time: 1s
                #size: [[13, 12px], [15, 18px]]
                #interactive: true
                text:
                    interactive: true
                    text_wrap: 20
                    font:
                        family: sans-serif
                        weight: 400
                        style: normal
                        size: 1.2em
                        fill: white
        # add generic icon at high zoom
        generic:
            filter: { $zoom: { min: 18 } }
            draw:
                icons:
                    sprite: function() { return feature.kind; }
                    sprite_default: info
                    #sprite: info

        # examples of different icons mapped to feature properties
        icons:
            restaurant:
                filter: { kind: [restaurant] }
                draw: { icons: { sprite: restaurant } }
            cafe:
                filter: { kind: [cafe, convenience] }
                draw: { icons: { sprite: cafe } }
            bar:
                filter: { kind: [bar, pub] }
                draw: { icons: { sprite: bar } }
            culture:
                filter: { kind: [museum, library, church, place_of_worship, bank] }
                draw: { icons: { sprite: museum } }
            station:
                filter: { kind: [station] }
                draw: { icons: { sprite: train } }
            hospital:
                filter: { kind: [hospital, pharmacy] }
                draw: { icons: { sprite: hospital } }
            hotel:
                filter: { kind: [hotel, hostel] }
                draw: { icons: { sprite: hotel } }
            bus_stop:
                filter: { kind: [bus_stop] }
                draw: { icons: { sprite: bus } }
            bookstore:
                filter: { kind: [bookstore] }
                draw: { icons: { sprite: bookstore } }

    buildings:
        data: { source: osm }
        filter: { $zoom: { min: 14 } }
        draw:
            polygons:
                style: heightglow
                order: global.default_order
                color: [.65, .65, .63]
        interactive:
            filter: { name: true }
            draw:
                polygons:
                    interactive: true
        extruded:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    extrude: true
                lines:
                    style: heightglowline
                    width: 1.0
                    color: [0.65, 0.65, 0.63]
                    order: function() { return feature.sort_key + 1 || 0; }
                    extrude: true
        high-line:
            filter: {roof_material: grass}
            draw:
                polygons:
                    style: polygons
                    color: '#bddec5'
    # poi_labels:
    #     data: { source: osm, layer: pois }
    #     filter: { name: true, not: { kind: [peak, viewpoint, bicycle_rental, car_sharing] }, $zoom: { min: 15 } }
    #     draw:
    #         text:
    #             interactive: true
    #             #offset: [0, 12px]
    #             align: right
    #             text_wrap: 20
    #             font:
    #                 family: sans-serif
    #                 weight: 400
    #                 style: normal
    #                 size: 1.2em
    #                 fill: white
    road_labels:
        data: {source: osm, layer: roads}
        filter: { name: true, aeroway: false, tunnel: false, railway: false, not: { kind: rail }, $zoom: { min: 10 } }
        draw:
            text:
                interactive: true
                visible: true
                priority: 2
                # offset: [0, 8px]
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: sans-serif
                    weight: 400
                    style: normal
                    size: 1.em
                    fill: black
                    stroke: { color: white, width: 2 }
        highway:
            filter: { kind: highway }
            draw:
                text:
                    repeat_distance: 200px
                    repeat_group: road_labels
                    visible: true
                    #offset: [0px, 5px]
                    priority: 1
                    transition:
                        [show, hide]:
                            time: 1s
                    font:
                        family: sans-serif
                        weight: 400
                        style: normal
                        size: 18px
                        fill: black
                        transform: capitalize
        major_road:
            filter: { kind: major_road }
            draw:
                text:
                    repeat_distance: 100px
                    repeat_group: roads
                    interactive: true
                    visible: true
                    priority: 3
                    transition:
                        [show, hide]:
                            time: 1s
                    font:
                        family: sans-serif
                        weight: 400
                        style: normal
                        size: 14.5pt
    places:
        data: { source: osm }
        filter:
            name: true
            not: { kind: [county, state, island] }
            any:
                - { $zoom: { min: 1 }, kind: ocean }
                - { $zoom: { min: 2, max: 5 }, kind: continent }
                #important contries
                - { $zoom: { min: 4 }, name: ["United States of America", "Brasil", "Россия", "中华人民共和国"] }
                # unimportant countries
                - { $zoom: { min: 5 }, kind: country }
                - $zoom: { min: 6 }
                # this function matches the "cities" sublayer
                #- function() {return (feature.scalerank * .75) <= ($zoom - 4); }
            $zoom: { max: 15 }
        draw:
            text:
                text_source: [name:en, name, area, volume]
                repeat_distance: 0
                interactive: true
                priority: 1
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: sans-serif
                    weight: 400
                    style: normal
                    size: 15.5px
                    fill: black
        continents:
            filter: { kind: continent }
            draw: {}
        countries:
            filter: { kind: country }
            draw: {}
        oceans:
            filter: { kind: ocean }
            draw: {}
        minor-places:
            filter: { kind: [hamlet, village, town, neighbourhood, suburb, quarter], $zoom: { max: 13 } }
            draw: {}
            #visible: false
        #cities:
            # this filter shows lower scaleranks at higher zooms, starting at z4
            #filter: function() { return (feature.scalerank * .75) <= ($zoom - 4); }
    landuse_labels:
        data: { source: osm, layer: [landuse_labels, pois] }
        filter:
            name: true
            kind: [park, forest, cemetery, graveyard]
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 9 }, area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 1000000 } }
                - { $zoom: { min: 15 }, area: { min: 10000 } }
                - { $zoom: { min: 18 } }
        draw:
            text:
                interactive: true
                priority: 0
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: sans-serif
                    weight: 400
                    style: normal
                    size: 20px
                    fill: darkgreen

    pois:
        data: { source: osm }
        draw:
            icons: {}
